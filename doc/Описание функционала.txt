Функционал проекта «Пицца»
Реализует управление сетью кафе.
Функциональность проекта пиццы будет включать возможность создавать, читать, обновлять и удалять (CRUD) записи как для пиццы и других блюд, так и для кафе. Функциональность будет защищена, если для доступа к этим функциям потребуется имя пользователя «admin».

Menu CRUD: пользователи с именем «admin» смогут создавать новые записи о меню, предоставляя такую информацию, как название блюда, инградиенты. Они также смогут просматривать, обновлять и удалять существующие записи о меню.

Pizzerias  CRUD: пользователи с именем пользователя «admin» смогут создавать новые записи о кафе, предоставляя такую информацию, как название кафе, местоположение и телефон, время работы. Они также смогут просматривать, обновлять и удалять существующие записи о кафе.

Запросы POST, DELETE и PUT: пользователи с именем пользователя «admin» смогут создавать новые ресурсы, отправляя запрос POST, удалять существующие ресурсы, отправляя запрос DELETE, и обновлять существующие ресурсы, отправляя запрос PUT.

GET работает для всех.

Безопасность: приложение будет защищено за счет запроса имени пользователя «admin» для доступа к функциям пиццы и кафе CRUD, а также запросам POST, DELETE и PUT. Это можно реализовать с помощью Spring Security, который будет проверять учетные данные пользователя и ограничивать доступ к определенным частям приложения в зависимости от его роли.
Приложение также будет иметь возможность извлекать все блюда, извлекать определенное блюдо, извлекать все кафе, извлекать конкретное кафе. 
Pizzerias  имеет двустороннюю связь @OneToMany. Это означает, что в одном кафе может быть несколько блюд, но каждоеблюдо может принадлежать только одному кафе.